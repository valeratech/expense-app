{"ast":null,"code":"var _jsxFileName = \"/home/ryan/JavaScript/Udemy/React/expense-app/src/components/Graph/ExpensesGraph.jsx\";\nimport Graph from './Graph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpensesGraph(props) {\n  // create an array of labels/values which will be poplulated by iterating props.expenseData in the for loop below\n  const graphData = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  props.expenseData.forEach(expense => {\n    // Loop through the filtered array (by year) passed down by ExpensesGraph\n    // Abstract ANY expense by month using getMonth() returning a numerical representation starting at 0 (January)\n    const month = expense.date.getMonth(); // starting at 0 => January => 0\n\n    // Use the number abstracted by getMonth to index graphData object and set the value, incrementing a total\n    // This total represents the sum of all amounts and expenses for that given month\n    graphData[month].value += expense.amount;\n  });\n\n  // Once data is populated into graphData, pass it as a prop value through the Graph component\n  return /*#__PURE__*/_jsxDEV(Graph, {\n    graphData: graphData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n}\n_c = ExpensesGraph;\nexport default ExpensesGraph;\nvar _c;\n$RefreshReg$(_c, \"ExpensesGraph\");","map":{"version":3,"names":["Graph","jsxDEV","_jsxDEV","ExpensesGraph","props","graphData","label","value","expenseData","forEach","expense","month","date","getMonth","amount","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ryan/JavaScript/Udemy/React/expense-app/src/components/Graph/ExpensesGraph.jsx"],"sourcesContent":["import Graph from './Graph';\n\nfunction ExpensesGraph(props) {\n    // create an array of labels/values which will be poplulated by iterating props.expenseData in the for loop below\n    const graphData = [\n        { label: 'Jan', value: 0 },\n        { label: 'Feb', value: 0 },\n        { label: 'Mar', value: 0 },\n        { label: 'Apr', value: 0 },\n        { label: 'May', value: 0 },\n        { label: 'Jun', value: 0 },\n        { label: 'Jul', value: 0 },\n        { label: 'Aug', value: 0 },\n        { label: 'Sep', value: 0 },\n        { label: 'Oct', value: 0 },\n        { label: 'Nov', value: 0 },\n        { label: 'Dec', value: 0 },\n    ];\n\n    props.expenseData.forEach(expense => {\n\n        // Loop through the filtered array (by year) passed down by ExpensesGraph\n        // Abstract ANY expense by month using getMonth() returning a numerical representation starting at 0 (January)\n        const month = expense.date.getMonth(); // starting at 0 => January => 0\n\n        // Use the number abstracted by getMonth to index graphData object and set the value, incrementing a total\n        // This total represents the sum of all amounts and expenses for that given month\n        graphData[month].value += expense.amount;\n    })\n\n    // Once data is populated into graphData, pass it as a prop value through the Graph component\n    return <Graph graphData={graphData} />;\n}\n\nexport default ExpensesGraph;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC1B;EACA,MAAMC,SAAS,GAAG,CACd;IAAEC,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,CAC7B;EAEDH,KAAK,CAACI,WAAW,CAACC,OAAO,CAACC,OAAO,IAAI;IAEjC;IACA;IACA,MAAMC,KAAK,GAAGD,OAAO,CAACE,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAEvC;IACA;IACAR,SAAS,CAACM,KAAK,CAAC,CAACJ,KAAK,IAAIG,OAAO,CAACI,MAAM;EAC5C,CAAC,CAAC;;EAEF;EACA,oBAAOZ,OAAA,CAACF,KAAK;IAACK,SAAS,EAAEA;EAAU;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1C;AAACC,EAAA,GA9BQhB,aAAa;AAgCtB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}