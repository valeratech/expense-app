{"ast":null,"code":"var _jsxFileName = \"/home/ryan/JavaScript/Udemy/React/expense-app/src/components/Graph/Graph.jsx\";\nimport GraphBar from './GraphBar';\nimport './Graph.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Graph(props) {\n  // Map (loop) through all the \"values\" (amounts) passed down from ExpensesGraph.jsx and store it in a new array \"values\"\n  const values = props.graphData.map(data => data.value);\n  // The Math.max method returns the largest of the numbers in the values array\n  // The \"total\" variable (max value) represents the sum of ALL values filtered for the given Month\n  // The \"total\" variable will be used to set the ceiling for each bar. The (total/maxValue) = 100% of the bar\n  const total = Math.max(...values);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph\",\n    children: props.graphData.map(item => /*#__PURE__*/_jsxDEV(GraphBar, {\n      value: item.value,\n      maxValue: total,\n      label: item.label\n    }, item.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["GraphBar","jsxDEV","_jsxDEV","Graph","props","values","graphData","map","data","value","total","Math","max","className","children","item","maxValue","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ryan/JavaScript/Udemy/React/expense-app/src/components/Graph/Graph.jsx"],"sourcesContent":["import GraphBar from './GraphBar';\nimport './Graph.css';\n\nfunction Graph (props) {\n    // Map (loop) through all the \"values\" (amounts) passed down from ExpensesGraph.jsx and store it in a new array \"values\"\n    const values = props.graphData.map(data => data.value);\n    // The Math.max method returns the largest of the numbers in the values array\n    // The \"total\" variable (max value) represents the sum of ALL values filtered for the given Month\n    // The \"total\" variable will be used to set the ceiling for each bar. The (total/maxValue) = 100% of the bar\n    const total = Math.max(...values);\n\n    return (\n        <div className='graph'>\n            {/* Map (loop) through the graphData array of objects that contain \"label\" and \"value\" keys. */}\n            {/* The values for these keys will be a month and the total amount for each month respectively */}\n            {props.graphData.map(item => (\n                <GraphBar key={item.label} value={item.value} maxValue={total} label={item.label}/>\n            ))}\n        </div>\n    )\n}\n\nexport default Graph;"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,KAAKA,CAAEC,KAAK,EAAE;EACnB;EACA,MAAMC,MAAM,GAAGD,KAAK,CAACE,SAAS,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC;EACtD;EACA;EACA;EACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGP,MAAM,CAAC;EAEjC,oBACIH,OAAA;IAAKW,SAAS,EAAC,OAAO;IAAAC,QAAA,EAGjBV,KAAK,CAACE,SAAS,CAACC,GAAG,CAACQ,IAAI,iBACrBb,OAAA,CAACF,QAAQ;MAAkBS,KAAK,EAAEM,IAAI,CAACN,KAAM;MAACO,QAAQ,EAAEN,KAAM;MAACO,KAAK,EAAEF,IAAI,CAACE;IAAM,GAAlEF,IAAI,CAACE,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyD,CACrF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACC,EAAA,GAjBQnB,KAAK;AAmBd,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}